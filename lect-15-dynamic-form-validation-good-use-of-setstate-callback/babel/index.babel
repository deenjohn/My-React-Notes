

class NameForm extends React.Component {
  
  constructor(...args){
    super(...args);
    this.initialState = {
      firstname :{error: 'firstname must be longer than 3 characters'} ,
      lastname :{error: 'lastname must be longer than 3 characters'},
      valid : false
    }
    this.state = { 
      ...this.initialState
    } ;
    this.handleSubmit = this.handleSubmit.bind(this) 
    this.handleChange = this.handleChange.bind(this)
    this.validate  = this.validate.bind(this);
    this.touched = this.touched.bind(this);
    this.reset = this.reset.bind(this)
  }
  
  reset(e){
    
    this.setState({...this.initialState})
  }
  
  touched(){
    //console.log('touched')
  }
  
  handleChange(e){
     
    const {value , name } = e.target ;
    
    const error = this.props.getErrorMessage(value,name) ;
    
    {error ?  
       this.setState( 
         { [name] :{error: error} } ,
            function() {
              this.validate();
             }
      ) : this.setState( 
       { [name] :{error: ""} } ,
          function() {
              this.validate();
            }
      )}
   
  } 
  
  handleSubmit(e){
     e.preventDefault();
    const error = this.state.error ;
     
  }
   
  validate(){
    const {firstname , lastname} = this.state ;
    if( firstname.error  === "" &&  lastname.error === ""  ){
      console.log('set valid ')
      this.setState( 
       { valid:true}
    )}else{
        this.setState( 
       { valid:false}
    )
      }
    
  }
  render(){
    
    console.log(this.state)
    
    const {firstname ,lastname, valid} = this.state ;    
    const errorStyle ={
      color : 'black' , fontSize : '1em' ,
      backgroundColor : 'red' ,width : '50%' ,
      marginTop: '20px' ,marginLeft :'5px',padding :'10px' 
    }
    const btnstyle ={
      disabled : !!valid ,
      className  : valid ? 'enabled' : 'disabled' 
    } 
    
    return( 
      <form onSubmit={this.handleSubmit}>
        <label htmlFor="firstname">First Name </label><br />
        <input onChange={this.handleChange} 
               onBlur ={this.touched} 
               type="text" name="firstname" />
        <br />
        <label htmlFor="lastname"> Last Name </label><br />
        <input onBlur ={this.touched} 
               onChange={this.handleChange} 
               type="text" name="lastname" />
        <br />
        
        {firstname.error ? 
          <div style ={errorStyle}>
           {firstname.error} 
         </div>
        :null }
        
        {lastname.error ? 
          <div style ={errorStyle}>
           {lastname.error} 
         </div>
        :null }
        
        <input type="submit" value="Submit"  {...btnstyle} />    
        <input type="reset" value="Reset" onClick={this.reset} />
      </form>
    )
    
  }
  
}
class App extends React.Component {
  constructor(props) {
    super(props);
    this.handleErrorMessage = this.handleErrorMessage.bind(this);
  }
  
  handleErrorMessage(value ,name ){
    if(value.length < 4){
      return `${name} must be longer than 3 characters`   
    }else{
      return 
    }
  }
  
  render() {
    return (
      <NameForm  getErrorMessage ={this.handleErrorMessage}/>
    );
  }
}

ReactDOM.render(
         <App /> 
    ,
    document.getElementById('root')
);





  
  